Quick sort
1
33 24
1280 720
56
1
20 20 0 1 0

Data/Pictures/Cross.png
1270 10
1
20 20 0 1 0

Data/Pictures/Minimize.png
1250 10
1
1240 20 20 0 0
Data/Fonts/Azonix.otf

620 10 Quick sort
1
40 40 0 1 0

Data/Pictures/Play.png
640 450
1
40 40 0 1 0

Data/Pictures/Back.png
600 450
1
40 40 0 1 0

Data/Pictures/Next.png
680 450
1
488 22 20 0 0
Data/Fonts/Azonix.otf
Data/Pictures/Input field.png
246 640 
1
20 20 0 1 0

Data/Pictures/Open.png
216 670
1
20 20 0 1 0

Data/Pictures/Save.png
256 670
2
100 20 20 1 0
Data/Fonts/Dewberry regular.ttf

450 510 Enter
450 530 Random
3
100 20 20 0 0
Data/Fonts/Azonix.otf

50 350 Green - left
50 370 White - right
50 390 Red - mid
21
47 22 20 0 0
Data/Fonts/Azonix.otf
Data/Pictures/Input field (small).png
340 510 10
25 570 0
74 570 0
123 570 0
172 570 0
221 570 0
270 570 0
319 570 0
368 570 0
417 570 0
466 570 0
25 595 0
74 595 0
123 595 0
172 595 0
221 595 0
270 595 0
319 595 0
368 595 0
417 595 0
466 595 0
21
500 30 15 0 0
Data/Fonts/calibri.ttf

1000 400 vector<piar<int, int> > stack(1, { 0, n - 1 });
1000 415 while (stack.size() != 0)
1000 430 {
1000 445     int begin = stack.back().first, end = stack.back().second;
1000 460     stack.pop_back()
1000 475     int left = begin, right = end;
1000 490     int mid = (left + right) / 2;
1000 505     while (left <= right)
1000 520     {
1000 535         while (a[left] < a[mid])
1000 550             ++left;
1000 565         while (a[right] > a[mid])
1000 580             --right;
1000 595         if (left <= right)
1000 610             swap(a[right++], a[left--]);
1000 625     }
1000 640     if (begin < right)
1000 655         stack.push_back({ begin, right });
1000 670     if (end > left)
1000 685         stack.push_back({ left, end });
1000 700 }
1
16